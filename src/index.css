@import url("https://fonts.googleapis.com/css2?family=Montserrat&display=swap");

* {
  margin: 0;
  padding: 0;
  box-sizing: border-box;
  font-family: "Montserrat", sans-serif;
  cursor: default;
  -webkit-tap-highlight-color: rgba(255, 255, 255, 0);
}

*,
*:before,
*:after {
  box-sizing: inherit;
}

:root {
  /* colors */
  --primary-color: rgb(30, 30, 30);
  --secondary-color: #fff;
  --error-color: #ed4337;

  /* variables */

  --primary-color-v: var(--primary-color);
  --secondary-color-v: var(--secondary-color);
  --error-color-v: var(--error-color);
}

[color-scheme="DARK"] {
  --primary-color-v: var(--primary-color);
  --secondary-color-v: var(--secondary-color);
  --error-color-v: var(--error-color);
}

[color-scheme="LIGHT"] {
  --primary-color-v: var(--secondary-color);
  --secondary-color-v: var(--primary-color);
  --error-color-v: var(--error-color);
}

body {
  background-color: var(--secondary-color-v);
}

h1,
h2,
h3,
h4,
h5,
h6 {
  color: var(--primary-color-v);
}

p {
  color: var(--primary-color-v);
}

img {
  max-width: 100%;
  object-fit: cover;
}

a {
  border: none;
  outline: none;
  text-decoration: none;
  color: inherit;
  -webkit-tap-highlight-color: white;
  cursor: pointer;
}

input {
  max-width: 100%;
  overflow: hidden;
}

.material-icons {
  font-size: 2em;
  color: var(--primary-color-v);
}

input {
  border: 0;
  background-color: var(--secondary-color-v);
  color: var(--primary-color-v);
}

input::placeholder {
  color: var(--primary-color-v);
}

button {
  border: 0;
  font-size: 1em;
  cursor: pointer;
  border-radius: 12px;
}

.material-icons {
  cursor: pointer;
}

*:disabled {
  background-color: dimgray;
  color: linen;
  opacity: 1;
}

.loadingBallContainer {
  display: flex;
  align-content: center;
  justify-content: center;
  padding: 1rem;
  margin-bottom: 20px;
}

.loadingBall {
  width: 20px;
  height: 20px;
  border-radius: 50%;
  background-color: var(--secondary-color-v);
  animation: bounce 0.5s;
  animation-direction: alternate;
  animation-timing-function: cubic-bezier(0.5, 0.05, 1, 0.5);
  animation-iteration-count: infinite;
}

form input[type="submit"] {
  cursor: pointer;
}

.rotate {
  transform: rotate(180deg);
}

/* animations */

@keyframes bounce {
  from {
    transform: translate3d(0, 0, 0);
  }
  to {
    transform: translate3d(0, 50px, 0);
  }
}
